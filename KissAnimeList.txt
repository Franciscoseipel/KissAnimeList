// ==UserScript==
// @name        KissAnimeList
// @version     0.55
// @description Integrates MyAnimeList into Kissanime, with auto episode tracking.
// @author      lolamtisch@gmail.com
// @license     Creative Commons; http://creativecommons.org/licenses/by/4.0/
// @include     /https?://kissanime.ru/Anime/*/
// @include     /https?://kissanime.to/Anime/*/
// @include     /https?://kissanime.com/Anime/*/
// @require     http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js
// @connect     www.google.com
// @connect     ipv4.google.com
// @connect     myanimelist.net
// @connect     *
// @grant       GM_xmlhttpRequest
// @grant       GM_getValue
// @grant       GM_setValue
// @grant       GM_deleteValue
// @run-at      document-start
// @namespace https://greasyfork.org/users/92233
// ==/UserScript==

(function() {
    'use strict';
    if (window.top != window.self) {return; }
    var googleover = 0;
    function handleanime(anime){
        if(anime['login'] === 0){
            $('#MalLogin').css("display","none");
            $("#MalData").css("display","initial");
            $("#MalInfo").text("");
            $("#malRating").attr("href", anime['malurl']).text("Loading");
            $("#malRating").after("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Please log in on <a href='https://myanimelist.net/login.php'>MyAnimeList!<a>");
            getcommondata(anime['malurl']);
            return;
        }
        if($("#malp").width() !== null){
            $("#flash").attr("anime", anime['.anime_id']);
            $("#malRating").attr("href", anime['malurl']).text("Loading");
            $("#malStatus").val(anime['.add_anime[status]']);
            $("#malEpisodes").val(anime['.add_anime[num_watched_episodes]']);
            $("#malTotal").text(anime['totalEp']); 
            $("#malUserRating").val(anime['.add_anime[score]']);
            $("#MalData").css("display","initial");
            $("#MalInfo").text("");

            $( "#malEpisodes" ).change(function() {
                updatebutton();
            });
            $( "#malUserRating" ).change(function() {
                updatebutton();
            });
            $( "#malStatus" ).change(function() {
                updatebutton();
            });

            getcommondata(anime['malurl']);

            var episodelink;
            $(".listing a").each(function( index ) {
                try{
                    episodelink = parseInt($(this).attr('href').split("/")[3].split("?")[0].match(/\d+/)[0].slice(-3));
                }catch(e) {
                    episodelink = 1;
                }
                $(this).parent().parent().css("background-color","initial");
                if(episodelink == parseInt(anime['.add_anime[num_watched_episodes]'])){
                    $(this).parent().parent().css("background-color","#002966");
                    $(".headui").html('<a style="color: white;" href="'+$(this).parent().parent().prev().find('a').attr('href')+'">'+$(this).parent().parent().prev().find('a').text().replace($('.bigChar').text(),'')+'</a>');
                }
            });
        }else{
            //update
            try{
                var curEpisode = parseInt(window.location.href.split("/")[5].split("?")[0].match(/\d+/)[0].slice(-3));
            }catch(e) {
                var curEpisode = 1;
            }
            //if(curEpisode > anime['.add_anime[num_watched_episodes]']){
            var animechange = {};
            animechange['.add_anime[num_watched_episodes]'] = curEpisode;
            animechange['checkIncrease'] = 1;
            setanime(window.location.href.split("/")[4],animechange);
        }
    }

    function handleanimeupdate( anime, current){
        if(anime['checkIncrease'] === 1){
            if(current['.add_anime[num_watched_episodes]'] >= anime['.add_anime[num_watched_episodes]']){
                if((anime['.add_anime[status]'] === 2 || current['.add_anime[status]'] === 2) && anime['.add_anime[num_watched_episodes]'] === 1){
                    if (confirm('Rewatch anime?')) {
                        anime['.add_anime[is_rewatching]'] = 1;
                    }else{
                        return null;
                    }
                }else{
                    return null;
                }
            }
            if(current['.add_anime[status]'] !== 2 && anime['.add_anime[num_watched_episodes]'] === current['totalEp']){
                if (confirm('Set as completed?')) {
                    anime['.add_anime[status]'] = 2;
                    if(current['.add_anime[finish_date][day]'] === ''){
                        var Datec = new Date();
                        anime['.add_anime[finish_date][year]'] = Datec.getFullYear();
                        anime['.add_anime[finish_date][month]'] = Datec.getMonth()+1;
                        anime['.add_anime[finish_date][day]'] = Datec.getDate();
                    }
                }
            }
            if(current['.add_anime[status]'] === 2 && anime['.add_anime[num_watched_episodes]'] === current['totalEp'] && current['.add_anime[is_rewatching]'] === 1){
                if (confirm('Finish rewatching?')) {
                    anime['.add_anime[is_rewatching]'] = 0;
                    if(current['.add_anime[num_watched_times]'] === ''){
                        anime ['.add_anime[num_watched_times]'] = 1;
                    }else{
                        anime ['.add_anime[num_watched_times]'] = parseInt(current['.add_anime[num_watched_times]'])+1;
                    }
                }
            }
            if(current['.add_anime[status]'] !== 1 && current['.add_anime[status]'] !== 2 && anime['.add_anime[status]'] !== 2){ 
                if (confirm('Start watching?')) {
                    anime['.add_anime[status]'] = 1;
                    if(current['.add_anime[start_date][day]'] === ''){
                        var Datec = new Date();
                        anime['.add_anime[start_date][year]'] = Datec.getFullYear();
                        anime['.add_anime[start_date][month]'] = Datec.getMonth()+1;
                        anime['.add_anime[start_date][day]'] = Datec.getDate();
                    }
                }
            }

        }



        return anime;
    }

    function getcommondata(url){
        GM_xmlhttpRequest({
            method: "GET",
            url: url,
            synchronous: false,
            headers: {
                "User-Agent": "Mozilla/5.0"
            },
            onload: function(response) {
                var data = response.responseText;
                var rating = data.split('class="dark_text">Score')[1].split('<span')[1].split('>')[1].split('<')[0];
                $("#malRating").attr("href", url).text(rating);
            }
        });
    }

    function getanime(title , callback, absolute = false) {
        var url = '';
        var malurl = '';
        if(absolute === false){
            //url = "http://myanimelist.net/anime.php?q=" + encodeURI(formattitle(title));
            url = "http://www.google.com/search?btnI&q=site:myanimelist.net/Anime/+-site:myanimelist.net/Anime/genre/+-site:myanimelist.net/anime/season/+"+encodeURI(formattitle(title));
            if(GM_getValue(title , null) !== null ){
                url = GM_getValue(title , null);
            }
            if(staticUrl(formattitle(title)) !== null){
                url = staticUrl(formattitle(title));
            }
        }else{
            url = absolute;
        }

        if(url.indexOf("myanimelist.net/anime/") > -1 && url.indexOf("google") === -1) {
            console.log("Mal: ", url);
            if(googleover === 0){
                GM_setValue( title, url );
            }
            malurl = url;
            url = 'https://myanimelist.net/ownlist/anime/'+url.split('/')[4]+'/edit?hideLayout';
        }
        console.log("url",url);

        GM_xmlhttpRequest({
            method: "GET",
            url: url,
            synchronous: false,
            headers: {
                "User-Agent": "Mozilla/5.0"
            },
            onload: function(response) {
                url = response.finalUrl;
                url = firefoxUrl(url, response.responseText);
                if(url.split("/").length > 6 && url.indexOf("myanimelist.net/anime") > -1 && url.indexOf("google") === -1){
                    var partes = url.split("/");
                    url = partes[0]+"/"+partes[1]+"/"+partes[2]+"/"+partes[3]+"/"+partes[4]+"/"+partes[5];
                    getanime(title, callback, url);
                    return;
                }
                if(url.indexOf("ipv4.google.com") > -1) {
                    googleover = 1;
                    $( document ).ready(function() {
                        flashm( "Google Overloaded <br> <a target='_blank' href='"+url+"'>Solve captcha<a>" , true);
                        url = "http://myanimelist.net/anime.php?q=" + encodeURI(formattitle(title));
                        getanime(title, callback, url);
                    });
                    return;
                }

                if(url.indexOf("anime.php") > -1) {
                    var data = response.responseText;
                    var link = data.split(' <a class="hoverinfo_trigger" href="')[1].split('"')[0];
                    getanime(title, callback, link);
                    return;
                }

                if(url.indexOf("google.") > -1) {
                    googleover = 0;
                    var data = response.responseText;
                    if(data.indexOf("getElementById('captcha')") > -1){ //Firefox no absolute url workaround TODO:
                        googleover = 1;
                        $( document ).ready(function() {
                            flashm( "Google Overloaded", true);// <br> <a target='_blank' href='"+url+"'>Solve captcha<a>" , true);
                            url = "http://myanimelist.net/anime.php?q=" + encodeURI(formattitle(title));
                            getanime(title, callback, url);
                        });
                        return;
                    }
                    var link = data.split('class="g"')[1].split('a href="')[1].split('"')[0];
                    if(link.indexOf("/url?") > -1){
                        link = link.split("?q=")[1].split("&")[0];
                    }
                    getanime(title, callback, link);
                } else {
                    if(url.indexOf("myanimelist.net/anime/") > -1) {
                        console.log("Mal: ",url);
                        if(googleover === 0){
                            GM_setValue( title, url );
                        }
                        getanime(title, callback, url);
                    }else{
                        if(url.indexOf("myanimelist.net/login.php") > -1) {
                            flashm( "Please log in on <a href='https://myanimelist.net/login.php'>MyAnimeList!<a>" , true);
                            var anime = {};
                            anime['login'] = 0;
                            anime['malurl'] = malurl;
                            $( document ).ready(function() {
                                callback(anime);
                            });
                        }else{
                            if(url.indexOf("myanimelist.net/anime.php") > -1) {
                                $("#MalInfo").text("Not Found!");
                                flashm( "Anime not found" , true);
                                return;
                            }
                            console.log("MalEdit: ",url);
                            var anime = getObject(response.responseText,malurl);
                            $( document ).ready(function() {
                                callback(anime);
                            });
                        }
                    }
                }
            }
        });
    }



    function getObject(data,url){
        //console.log(data);
        var anime = {};
        anime['malurl'] = url;
        anime['.csrf_token'] =  data.split('\'csrf_token\'')[1].split('\'')[1].split('\'')[0];
        if(data.indexOf('Add Anime') > -1) {
            anime['addanime'] = 1;
        }
        data = data.split('<form name="')[1].split('</form>')[0];

        anime['totalEp'] = parseInt(data.split('id="totalEpisodes">')[1].split('<')[0]);
        anime['name'] = data.split('<a href="')[1].split('">')[1].split('<')[0];
        anime['.anime_id'] = parseInt(data.split('name="anime_id"')[1].split('value="')[1].split('"')[0]); //input
        anime['.aeps'] = parseInt(data.split('name="aeps"')[1].split('value="')[1].split('"')[0]);
        anime['.astatus'] = parseInt(data.split('name="astatus"')[1].split('value="')[1].split('"')[0]);
        anime['.add_anime[status]'] = parseInt(getselect(data,'add_anime[status]'));
        //Rewatching
        if(data.split('name="add_anime[is_rewatching]"')[1].split('>')[0].indexOf('checked="checked"') >= 0){
            anime['.add_anime[is_rewatching]'] = 1;
        }
        //
        anime['.add_anime[num_watched_episodes]'] = parseInt(data.split('name="add_anime[num_watched_episodes]"')[1].split('value="')[1].split('"')[0]);
        if( isNaN(anime['.add_anime[num_watched_episodes]']) ){ anime['.add_anime[num_watched_episodes]'] = ''; }
        anime['.add_anime[score]'] = getselect(data,'add_anime[score]');
        anime['.add_anime[start_date][month]'] = getselect(data,'add_anime[start_date][month]');
        anime['.add_anime[start_date][day]'] = getselect(data,'add_anime[start_date][day]');
        anime['.add_anime[start_date][year]'] = getselect(data,'add_anime[start_date][year]');
        anime['.add_anime[finish_date][month]'] = getselect(data,'add_anime[finish_date][month]');
        anime['.add_anime[finish_date][day]'] = getselect(data,'add_anime[finish_date][day]');
        anime['.add_anime[finish_date][year]'] = getselect(data,'add_anime[finish_date][year]');
        anime['.add_anime[tags]'] = data.split('name="add_anime[tags]"')[1].split('>')[1].split('<')[0];//textarea
        anime['.add_anime[priority]'] = getselect(data,'add_anime[priority]');
        anime['.add_anime[storage_type]'] = getselect(data,'add_anime[storage_type]');
        anime['.add_anime[storage_value]'] = data.split('name="add_anime[storage_value]"')[1].split('value="')[1].split('"')[0];
        anime['.add_anime[num_watched_times]'] = data.split('name="add_anime[num_watched_times]"')[1].split('value="')[1].split('"')[0];
        anime['.add_anime[rewatch_value]'] = getselect(data,'add_anime[rewatch_value]');
        anime['.add_anime[comments]'] = data.split('name="add_anime[comments]"')[1].split('>')[1].split('<')[0];
        anime['.add_anime[is_asked_to_discuss]'] = getselect(data,'add_anime[is_asked_to_discuss]');
        anime['.add_anime[sns_post_type]'] = getselect(data,'add_anime[sns_post_type]');
        anime['.submitIt'] = data.split('name="submitIt"')[1].split('value="')[1].split('"')[0];
        console.log(anime);
        return anime;
    }

    function setanime(title ,anime, actual = null) {

        if(actual === null){
            getanime(title, function(actual){setanime(title , anime, actual);});
            return;
        }

        var url = "https://myanimelist.net/editlist.php?type=anime&id="+actual['.anime_id'];
        if(actual['addanime'] === 1){
            url = "https://myanimelist.net/ownlist/anime/add?selected_series_id="+actual['.anime_id'];
            if (!confirm('Add "'+actual['name']+'" to MAL?')) {
                return;
            }
        }

        anime = handleanimeupdate( anime, actual );
        if(anime === null){
            return;
        }
        $.each( anime, function( index, value ){
            actual[index] = value;
        });
        anime = actual;
        var parameter = "";


        $.each( anime, function( index, value ){
            if(index.charAt(0) == "."){
                if(!(index === '.add_anime[is_rewatching]' && anime[index] === 0)){
                    parameter += encodeURIComponent (index.substring(1))+"="+encodeURIComponent (value)+"&";
                }
            }
        });

        GM_xmlhttpRequest({
            method: "POST",
            url: url,
            synchronous: false,
            data: parameter,
            headers: {
                "User-Agent": "Mozilla/5.0",
                "Content-Type": "application/x-www-form-urlencoded",
                "accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
            },
            onload: function(response) {
                //console.log(response);//.responseText);
                if(anime['checkIncrease'] !== 1){
                    checkdata();
                }
                if(response.responseText.indexOf('Successfully') >= 0){
                    flashm( anime['name']+" ("+anime['.add_anime[num_watched_episodes]']+"/"+anime['totalEp']+")" , false);
                    if($("#malbutton").height()!==null){
                        $("#malbutton").attr("value","");
                        $("#malEpisodes").prop("disabled",false);
                        $("#malEpisodes").css('border-width','1px');
                        $("#malUserRating").prop("disabled",false);
                        $("#malUserRating").css('border-width','1px');
                        $("#malStatus").prop("disabled",false);
                        $("#malStatus").css('border-width','1px');
                    }
                    return;
                }
                flashm( "Anime update failed" , true);
                if($("#malbutton").height()!==null){
                    $("#malbutton").prop("disabled",false);
                    $("#malbutton").attr("value","update");
                    $("#malbutton").css('border-width','1px');
                    $("#malEpisodes").prop("disabled",false);
                    $("#malEpisodes").css('border-width','1px');
                    $("#malUserRating").prop("disabled",false);
                    $("#malUserRating").css('border-width','1px');
                    $("#malStatus").prop("disabled",false);
                    $("#malStatus").css('border-width','1px');
                }
            }
        });

    }

    //#####################

    function firefoxUrl(url, html){
        if(html.indexOf('property="og:url"') > -1){
            url = html.split('<meta property="og:url"')[1].split('content="')[1].split('"')[0];
        }
        return url;
    }

    function staticUrl(title){
        switch(title) {
            case 'Blood': return 'https://myanimelist.net/anime/150/Blood_';
            case 'K': return 'https://myanimelist.net/anime/14467/K';
            default:  return null;
        }
    }

    function getselect(data, name){
        var temp = data.split('name="'+name+'"')[1].split('</select>')[0];
        if(temp.indexOf('selected="selected"') > -1){
            temp = temp.split('<option');
            for (var i = 0; i < temp.length; ++i) {
                if(temp[i].indexOf('selected="selected"') > -1){
                    return temp[i].split('value="')[1].split('"')[0];
                }
            }
        }else{
            return '';
        }
    }

    function flashm(text,error = true){
        if(error === true){
            $('#flash').css("background","rgba(227, 0, 0, 0.6)");
        }else{
            $('#flash').css("background","rgba(0,227,30, 0.6)");
        }
        console.log("Flash Message: ",text);
        $('#flash').html(text).fadeIn(800).delay(4000).fadeOut(800);
    }

    function updatebutton(){//TODO when sending
        if($("#malbutton").height()===null){
            $("#malp").append("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type='button' value='update' id='malbutton' style='background-color: transparent; border-width: 1px; border-color: grey; color: #d5f406; text-decoration: none; outline: medium none;'>");
            $("#malbutton").click(function() {
                buttonclick();
            });
        }else{
            $("#malbutton").prop("disabled",false);
            $("#malbutton").attr("value","update");
            $("#malbutton").css('border-width','1px');
        }
    }

    function buttonclick(){
        $("#malbutton").prop("disabled",true);
        $("#malbutton").attr("value","Sending");
        $("#malbutton").css('border-width','0');
        $("#malEpisodes").prop("disabled",true);
        $("#malEpisodes").css('border-width','0');
        $("#malUserRating").prop("disabled",true);
        $("#malUserRating").css('border-width','0');
        $("#malStatus").prop("disabled",true);
        $("#malStatus").css('border-width','0');
        var anime = {};
        anime['.add_anime[num_watched_episodes]'] = $("#malEpisodes").val();
        anime['.add_anime[score]'] = $("#malUserRating").val();
        anime['.add_anime[status]'] = $("#malStatus").val();

        setanime(window.location.href.split("/")[4],anime);
    }

    function formattitle(title) {
        console.log("Title: ",title);

        if(title.substr(title.length - 4)=="-Dub"){
            title=title.slice(0,-4);
        }
        if(title.substr(title.length - 4)=="-Sub"){
            title=title.slice(0,-4);
        }

        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(" s2"," 2nd season");
        title = title.replace(" s3"," 3nd season");
        title = title.replace(" s4"," 4nd season");
        title = title.replace(" s5"," 5nd season");
        title = title.replace(" s6"," 6nd season");
        title = title.replace(" s7"," 7nd season");
        title = title.replace(" s8"," 8nd season");
        title = title.replace(" s9"," 9nd season");
        //title = title.replace(/[-,.?:'"\\!@#$%^&\-_=+`~;]/g,"");
        console.log("Formated: ",title);
        return title;
    }
    //init

    function checkdata(){
        var title = "";
        //var title=$(".bigChars").first().text();
        if(title === ""){
            title = window.location.href.split("/")[4];
        }

        if(title !== ""){
            getanime(title, function(anime){handleanime(anime);});
        }else{
            alert(error);
        }

        $( document ).ready(function() {
            var ui = '<p id="malp">';
            ui += '<span id="MalInfo">Loading</span>';

            ui += '<span id="MalData" style="display: none;">';

            ui += '<span class="info">Mal Score: </span>';
            ui += '<a id="malRating" target="_blank" href=""></a>';

            ui += '<span id="MalLogin">';

            ui += '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp';

            ui += '<span class="info">Status: </span>';
            ui += '<select id="malStatus" style="font-size: 12px;background: transparent; border-width: 1px; border-color: grey; color: #d5f406; text-decoration: none; outline: medium none;">';
            ui += '<option value="0" style="background: #111111;color: #d5f406;"></option>';
            ui += '<option value="1" style="background: #111111;color: #d5f406;">Watching</option>';
            ui += '<option value="2" style="background: #111111;color: #d5f406;">Completed</option>';
            ui += '<option value="3" style="background: #111111;color: #d5f406;">On-Hold</option>';
            ui += '<option value="4" style="background: #111111;color: #d5f406;">Dropped</option>';
            ui += '<option value="6" style="background: #111111;color: #d5f406;">Plan to Watch</option>';
            ui += '</select>';

            ui += '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp';

            ui += '<span class="info">Episodes: </span>';
            ui += '<span style="color: #d5f406; text-decoration: none; outline: medium none;">';
            ui += '<input id="malEpisodes" value="0" style="background: transparent; border-width: 1px; border-color: grey; text-align: right; color: #d5f406; text-decoration: none; outline: medium none;" type="text" size="1" maxlength="4">';
            ui += '/<span id="malTotal">0</span>';
            ui += '</span>';

            ui += '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp';

            ui += '<span class="info">Your Score: </span>';

            ui += '<select id="malUserRating" style="font-size: 12px;background: transparent; border-width: 1px; border-color: grey; color: #d5f406; text-decoration: none; outline: medium none;"><option value="" style="background: #111111;color: #d5f406;">Select</option>';
            ui += '<option value="10" style="background: #111111;color: #d5f406;">(10) Masterpiece</option>';
            ui += '<option value="9" style="background: #111111;color: #d5f406;">(9) Great</option>';
            ui += '<option value="8" style="background: #111111;color: #d5f406;">(8) Very Good</option>';
            ui += '<option value="7" style="background: #111111;color: #d5f406;">(7) Good</option>';
            ui += '<option value="6" style="background: #111111;color: #d5f406;">(6) Fine</option>';
            ui += '<option value="5" style="background: #111111;color: #d5f406;">(5) Average</option>';
            ui += '<option value="4" style="background: #111111;color: #d5f406;">(4) Bad</option>';
            ui += '<option value="3" style="background: #111111;color: #d5f406;">(3) Very Bad</option>';
            ui += '<option value="2" style="background: #111111;color: #d5f406;">(2) Horrible</option>';
            ui += '<option value="1" style="background: #111111;color: #d5f406;">(1) Appalling</option>';
            ui += '</select>';
            ui += '</span>';
            ui += '</span>';
            ui += '</p>';

            var uihead ='';
            uihead += '<p class="headui" style="float: right; margin: 0; margin-right: 10px">';
            uihead += '';
            uihead += '<p>';

            var uiwrong ='';
            uiwrong += '<a id="malWrong" href="#" style="display: inline; margin-left: 6px;">';
            uiwrong += 'Mal incorrect?';
            uiwrong += '</a>';

            if($("#flash").width() === null){
                $(".bigChar").first().after(ui);
                $(".bigChar").first().after(uiwrong);
                $(".barTitle").first().append(uihead);
                var flashpos = $('body');
                if($('#my_video_1').width() !== null){
                    flashpos = $('#my_video_1');
                }
                flashpos.prepend('<div style="text-align: center;position: fixed;bottom:10px;width:100%;z-index: 100000;left: 0;"><div id="flash" style="display:none;  background-color: red;padding: 20px; margin: 0 auto;max-width: 60%;          -webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;background:rgba(227,0,0,0.6);                       "></div></div>');
                $("#btnRemoveBookmark").click(function() {
                    var anime = {};
                    anime['.add_anime[status]'] = 4;
                    setanime(window.location.href.split("/")[4],anime);
                });

                $("#btnAddBookmark").click(function() {
                    var anime = {};
                    anime['.add_anime[status]'] = 6;
                    setanime(window.location.href.split("/")[4],anime);
                });
                $("#malWrong").click(function() {
                    var murl = GM_getValue(formattitle(title) , null);
                    murl = prompt("Please enter the right MyAnimeList url. \nLeave blank for reset",murl);
                    if(murl !== null){
                        if(murl !== ''){
                            GM_setValue( title, murl );
                            flashm( "new url '"+murl+"' set." , false);
                            checkdata();
                        }else{
                            GM_deleteValue( formattitle(title) );
                            flashm( "MyAnimeList url reset" , false);
                            checkdata();
                        }
                    }
                });
            }
        });


    }

    $("head").click(function() {
        checkdata();
    });

    checkdata();
    window.onpopstate = function (event) {
        checkdata();
    };



})();
